- name: "update apt packages."
  become: yes
  apt:
    update_cache: yes

- name: "upgrade packages"
  become: yes
  apt:
    upgrade: yes


- name: remove dependencies that are no longer required
  become: yes
  apt:
    autoremove: yes

- name: "install dependencies."
  become: yes
  apt:
    name: ["nodejs", "npm"]
    state: latest
    update_cache: yes

- name: "install pm2"
  become: yes
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: Creates directory
  file:
    path: ~/backend-artifact
    state: directory

- name: "Unarchive"
  unarchive:
    src: artifact.tar.gz
    dest: ~/backend-artifact


- name: install and start app
  command: |
    npm install
    pm2 stop default
    pm2 start npm -- start
  args:
    chdir: /home/ubuntu/backend
  environment:
    ENVIRONMENT: production
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "/home/ubuntu/backend/dist/migrations"
    TYPEORM_MIGRATIONS: "/home/ubuntu/backend/dist/migrations/*.js"
    TYPEORM_ENTITIES: "/home/ubuntu/backend/dist/modules/domain/**/**/*.entity.js"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  register: execute_node

- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"

- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"

- name: "Configure pm2 to start as service"
  shell: |
    sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
    pm2 save